{"version":3,"sources":["static/image/cold.jpg","static/image/hot.jpg","App.js","reportWebVitals.js","index.js"],"names":["api","days","months","App","useState","query","setQuery","weather","setWeather","now","Date","submit","setSubmit","err","setErr","img","useRef","cold","Math","floor","main","temp","current","hot","useEffect","fetch","then","res","json","console","log","cod","catch","className","style","backgroundImage","value","onKeyDown","e","key","onChange","target","placeholder","name","sys","country","getDay","getDate","getMonth","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAe,G,KAAA,IAA0B,kCCA1B,MAA0B,gC,OCMnCA,EACA,mCADAA,EAEC,2CAGDC,EAAO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YACpEC,EAAS,CAAC,UAAU,UAAU,QAAQ,QAAQ,MAAM,OAAO,SAAS,SAAS,YAAY,WAAW,WAAW,YA8DtGC,MA7Df,WAEE,MAAyBC,qBAAzB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BF,qBAA7B,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAM,IAAIC,KAChB,EAA2BN,oBAAS,GAApC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAqBR,oBAAS,GAA9B,mBAAOS,EAAP,KAAWC,EAAX,KACMC,EAAMC,iBAAOC,GAqCnB,OA9BGV,IAEEW,KAAKC,MAAMZ,EAAQa,KAAKC,KAAK,KAAK,GAEnCN,EAAIO,QAAQC,EAGZR,EAAIO,QAAQL,GAIhBO,qBAAU,WACRC,MAAM,GAAD,OAAIzB,EAAJ,qBAAyBK,GA7BrB,cA6BJ,kBAAgDL,IAClD0B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,GACC,QAAVA,EAAII,KAELjB,GAAO,GACPN,EAAWD,KAIXC,EAAWmB,GACXrB,EAAS,IACTQ,GAAO,OAGVkB,OAAM,SAAAnB,GAAG,OAAEgB,QAAQC,IAAIjB,QAC1B,CAACF,IAED,sBAAKsB,UAAU,MAAMC,MAAO,CAACC,gBAAgB,OAAD,OAAQpB,EAAIO,QAAZ,MAA5C,UACE,uBAAOc,MAAO/B,EAAOgC,UAtCzB,SAAsBC,GAET,UAARA,EAAEC,KACH3B,GAAWD,IAmCmC6B,SAAU,SAACF,GAAKhC,EAASgC,EAAEG,OAAOL,OAAOtB,GAAO,IAAS4B,YAAY,aAClH7B,EAAI,qBAAKoB,UAAU,MAAf,sEAA4D,GAChE1B,EACC,sBAAK0B,UAAU,QAAf,UACE,sBAAKA,UAAU,UAAf,UAA0B1B,EAAQoC,KAAlC,KAA0CpC,EAAQqC,IAAIC,WACtD,sBAAKZ,UAAU,OAAf,UAAuBhC,EAAKQ,EAAIqC,UAAhC,IAA4CrC,EAAIsC,UAAhD,IAA4D7C,EAAOO,EAAIuC,YAAvE,IAAqFvC,EAAIwC,iBACzF,qBAAKhB,UAAU,cAAf,SAA6B,iCAAOf,KAAKC,MAAMZ,EAAQa,KAAKC,KAAK,KAApC,aAC7B,qBAAKY,UAAU,SAAf,SAAyB1B,EAAQA,QAAQ,GAAGa,UAE7C,OCxDM8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.55d5777a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cold.30530eed.jpg\";","export default __webpack_public_path__ + \"static/media/hot.9d6bead3.jpg\";","\nimport { useEffect,useState,useRef } from 'react';\nimport './App.css';\nimport cold from './static/image/cold.jpg'\nimport hot from './static/image/hot.jpg'\n\nconst api={\n  key:'a099da34fdcd728112342f389af92965',\n  base:'https://api.openweathermap.org/data/2.5/'\n}\nconst defaut='ho chi minh'\nconst days = ['sunday','monday','tuesday','wednesday','thursday','friday','saturday']\nconst months = ['January','Febuary','Match','April','May','June','Junely','August','Septemper','Octorber','November','December']\nfunction App() {\n\n  const [query,setQuery] = useState()\n  const [weather,setWeather] = useState()\n  const now = new Date()\n  const [submit,setSubmit] = useState(true)\n  const [err,setErr] = useState(false)\n  const img = useRef(cold)\n  function handleSubmit(e)\n  {\n    if(e.key==='Enter')\n      setSubmit(!submit)\n  }\n\n  if(weather)\n  {\n    if(Math.floor(weather.main.temp-273)>20)\n    {\n      img.current=hot\n    }\n    else{\n      img.current=cold\n    }\n  }\n\n  useEffect(()=>{\n    fetch(`${api.base}weather?q=${query||defaut}&appid=${api.key}`)\n      .then(res=>res.json())\n      .then(res=>{\n        console.log(res)\n        if(res.cod==='404')\n        {\n          setErr(true)\n          setWeather(weather)\n        }\n        else\n        {\n          setWeather(res)\n          setQuery('')\n          setErr(false)\n        }\n      })\n      .catch(err=>console.log(err))\n  },[submit])\n  return (\n    <div className=\"App\" style={{backgroundImage:`url(${img.current})`}} >\n      <input value={query} onKeyDown={handleSubmit} onChange={(e)=>{setQuery(e.target.value);setErr(false)}} placeholder='Enter...' />\n      {err?<div className='err'>Thành phố không có trong dữ liệu</div>:''}\n      {weather?\n        <div className='group'>\n          <div className='address'>{weather.name}, {weather.sys.country}</div>\n          <div className='date'>{days[now.getDay()]} {now.getDate()} {months[now.getMonth()]} {now.getFullYear()}</div>\n          <div className='temperature'><span>{Math.floor(weather.main.temp-273)}&deg;c</span></div>\n          <div className='status'>{weather.weather[0].main}</div>\n        </div>\n        :''\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}